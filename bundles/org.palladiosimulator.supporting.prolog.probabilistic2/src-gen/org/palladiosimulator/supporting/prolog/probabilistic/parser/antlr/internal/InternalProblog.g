/*
 * generated by Xtext 2.23.0
 */
grammar InternalProblog;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.palladiosimulator.supporting.prolog.probabilistic.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.palladiosimulator.supporting.prolog.probabilistic.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.palladiosimulator.supporting.prolog.probabilistic.services.ProblogGrammarAccess;

}

@parser::members {

 	private ProblogGrammarAccess grammarAccess;

    public InternalProblogParser(TokenStream input, ProblogGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected ProblogGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getProgramAccess().getClausesProblogClauseParserRuleCall_0());
			}
			lv_clauses_0_0=ruleProblogClause
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getProgramRule());
				}
				add(
					$current,
					"clauses",
					lv_clauses_0_0,
					"org.palladiosimulator.supporting.prolog.probabilistic.Problog.ProblogClause");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleProblogClause
entryRuleProblogClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProblogClauseRule()); }
	iv_ruleProblogClause=ruleProblogClause
	{ $current=$iv_ruleProblogClause.current; }
	EOF;

// Rule ProblogClause
ruleProblogClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProblogClauseAccess().getProbFactRuleParserRuleCall_0_0_0());
				}
				this_ProbFactRule_0=ruleProbFactRule
				{
					$current = $this_ProbFactRule_0.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getProblogClauseAccess().getAnnotatedDisjunctionParserRuleCall_0_0_1());
				}
				this_AnnotatedDisjunction_1=ruleAnnotatedDisjunction
				{
					$current = $this_AnnotatedDisjunction_1.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getProblogClauseAccess().getTermClauseParserRuleCall_0_0_2());
				}
				this_TermClause_2=ruleTermClause
				{
					$current = $this_TermClause_2.current;
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getProblogClauseAccess().getPredicateParserRuleCall_0_0_3());
				}
				this_Predicate_3=rulePredicate
				{
					$current = $this_Predicate_3.current;
					afterParserOrEnumRuleCall();
				}
			)
			otherlv_4='.'
			{
				newLeafNode(otherlv_4, grammarAccess.getProblogClauseAccess().getFullStopKeyword_0_1());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getProblogClauseAccess().getCommentParserRuleCall_1());
		}
		this_Comment_5=ruleComment
		{
			$current = $this_Comment_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleProbFactRule
entryRuleProbFactRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProbFactRuleRule()); }
	iv_ruleProbFactRule=ruleProbFactRule
	{ $current=$iv_ruleProbFactRule.current; }
	EOF;

// Rule ProbFactRule
ruleProbFactRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getProbFactRuleAccess().getProbabilisticFactParserRuleCall_0());
		}
		this_ProbabilisticFact_0=ruleProbabilisticFact
		{
			$current = $this_ProbabilisticFact_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getProbFactRuleAccess().getProbabilisticRuleParserRuleCall_1());
		}
		this_ProbabilisticRule_1=ruleProbabilisticRule
		{
			$current = $this_ProbabilisticRule_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAnnotatedDisjunction
entryRuleAnnotatedDisjunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnnotatedDisjunctionRule()); }
	iv_ruleAnnotatedDisjunction=ruleAnnotatedDisjunction
	{ $current=$iv_ruleAnnotatedDisjunction.current; }
	EOF;

// Rule AnnotatedDisjunction
ruleAnnotatedDisjunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAnnotatedDisjunctionAccess().getProbablisticFactsProbabilisticFactParserRuleCall_0_0());
				}
				lv_probablisticFacts_0_0=ruleProbabilisticFact
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAnnotatedDisjunctionRule());
					}
					add(
						$current,
						"probablisticFacts",
						lv_probablisticFacts_0_0,
						"org.palladiosimulator.supporting.prolog.probabilistic.Problog.ProbabilisticFact");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getAnnotatedDisjunctionAccess().getSemicolonKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAnnotatedDisjunctionAccess().getProbablisticFactsProbabilisticFactParserRuleCall_1_1_0());
					}
					lv_probablisticFacts_2_0=ruleProbabilisticFact
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAnnotatedDisjunctionRule());
						}
						add(
							$current,
							"probablisticFacts",
							lv_probablisticFacts_2_0,
							"org.palladiosimulator.supporting.prolog.probabilistic.Problog.ProbabilisticFact");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_3=':-'
			{
				newLeafNode(otherlv_3, grammarAccess.getAnnotatedDisjunctionAccess().getColonHyphenMinusKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAnnotatedDisjunctionAccess().getBodyExpression_1100_xfyParserRuleCall_2_1_0());
					}
					lv_body_4_0=ruleExpression_1100_xfy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAnnotatedDisjunctionRule());
						}
						set(
							$current,
							"body",
							lv_body_4_0,
							"org.palladiosimulator.supporting.prolog.Prolog.Expression_1100_xfy");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleProbabilisticFact
entryRuleProbabilisticFact returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProbabilisticFactRule()); }
	iv_ruleProbabilisticFact=ruleProbabilisticFact
	{ $current=$iv_ruleProbabilisticFact.current; }
	EOF;

// Rule ProbabilisticFact
ruleProbabilisticFact returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_probability_0_0=RULE_PROBABILITY
					{
						newLeafNode(lv_probability_0_0, grammarAccess.getProbabilisticFactAccess().getProbabilityPROBABILITYTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProbabilisticFactRule());
						}
						setWithLastConsumed(
							$current,
							"probability",
							lv_probability_0_0,
							"org.palladiosimulator.supporting.prolog.probabilistic.Problog.PROBABILITY");
					}
				)
			)
			otherlv_1='::'
			{
				newLeafNode(otherlv_1, grammarAccess.getProbabilisticFactAccess().getColonColonKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProbabilisticFactAccess().getHeadCompoundTermParserRuleCall_1_0());
				}
				lv_head_2_0=ruleCompoundTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProbabilisticFactRule());
					}
					set(
						$current,
						"head",
						lv_head_2_0,
						"org.palladiosimulator.supporting.prolog.Prolog.CompoundTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProbabilisticRule
entryRuleProbabilisticRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProbabilisticRuleRule()); }
	iv_ruleProbabilisticRule=ruleProbabilisticRule
	{ $current=$iv_ruleProbabilisticRule.current; }
	EOF;

// Rule ProbabilisticRule
ruleProbabilisticRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_probability_0_0=RULE_PROBABILITY
					{
						newLeafNode(lv_probability_0_0, grammarAccess.getProbabilisticRuleAccess().getProbabilityPROBABILITYTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getProbabilisticRuleRule());
						}
						setWithLastConsumed(
							$current,
							"probability",
							lv_probability_0_0,
							"org.palladiosimulator.supporting.prolog.probabilistic.Problog.PROBABILITY");
					}
				)
			)
			otherlv_1='::'
			{
				newLeafNode(otherlv_1, grammarAccess.getProbabilisticRuleAccess().getColonColonKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getProbabilisticRuleAccess().getHeadCompoundTermParserRuleCall_1_0());
				}
				lv_head_2_0=ruleCompoundTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProbabilisticRuleRule());
					}
					set(
						$current,
						"head",
						lv_head_2_0,
						"org.palladiosimulator.supporting.prolog.Prolog.CompoundTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':-'
		{
			newLeafNode(otherlv_3, grammarAccess.getProbabilisticRuleAccess().getColonHyphenMinusKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProbabilisticRuleAccess().getBodyExpression_1100_xfyParserRuleCall_3_0());
				}
				lv_body_4_0=ruleExpression_1100_xfy
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProbabilisticRuleRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"org.palladiosimulator.supporting.prolog.Prolog.Expression_1100_xfy");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComment
entryRuleComment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommentRule()); }
	iv_ruleComment=ruleComment
	{ $current=$iv_ruleComment.current; }
	EOF;

// Rule Comment
ruleComment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_PROLOG_SL_COMMENT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getCommentAccess().getValuePROLOG_SL_COMMENTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCommentRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.palladiosimulator.supporting.prolog.Prolog.PROLOG_SL_COMMENT");
			}
		)
	)
;

// Entry rule entryRulePredicate
entryRulePredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredicateRule()); }
	iv_rulePredicate=rulePredicate
	{ $current=$iv_rulePredicate.current; }
	EOF;

// Rule Predicate
rulePredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=':-'
		{
			newLeafNode(otherlv_0, grammarAccess.getPredicateAccess().getColonHyphenMinusKeyword_0());
		}
		(
			{
				newCompositeNode(grammarAccess.getPredicateAccess().getTableDirectiveParserRuleCall_1_0());
			}
			this_TableDirective_1=ruleTableDirective
			{
				$current = $this_TableDirective_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getPredicateAccess().getListDirectivesParserRuleCall_1_1());
			}
			this_ListDirectives_2=ruleListDirectives
			{
				$current = $this_ListDirectives_2.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTableDirective
entryRuleTableDirective returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableDirectiveRule()); }
	iv_ruleTableDirective=ruleTableDirective
	{ $current=$iv_ruleTableDirective.current; }
	EOF;

// Rule TableDirective
ruleTableDirective returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='table'
		{
			newLeafNode(otherlv_0, grammarAccess.getTableDirectiveAccess().getTableKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTableDirectiveAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTableDirectiveAccess().getPredicatePredicateIndicatorParserRuleCall_2_0());
				}
				lv_predicate_2_0=rulePredicateIndicator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableDirectiveRule());
					}
					set(
						$current,
						"predicate",
						lv_predicate_2_0,
						"org.palladiosimulator.supporting.prolog.Prolog.PredicateIndicator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getTableDirectiveAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleListDirectives
entryRuleListDirectives returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListDirectivesRule()); }
	iv_ruleListDirectives=ruleListDirectives
	{ $current=$iv_ruleListDirectives.current; }
	EOF;

// Rule ListDirectives
ruleListDirectives returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getListDirectivesAccess().getDynamicAction_0_0_0(),
							$current);
					}
				)
				(
					(
						lv_name_1_0='dynamic'
						{
							newLeafNode(lv_name_1_0, grammarAccess.getListDirectivesAccess().getNameDynamicKeyword_0_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getListDirectivesRule());
							}
							setWithLastConsumed($current, "name", lv_name_1_0, "dynamic");
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getListDirectivesAccess().getDiscontiguousAction_0_1_0(),
							$current);
					}
				)
				(
					(
						lv_name_3_0='discontiguous'
						{
							newLeafNode(lv_name_3_0, grammarAccess.getListDirectivesAccess().getNameDiscontiguousKeyword_0_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getListDirectivesRule());
							}
							setWithLastConsumed($current, "name", lv_name_3_0, "discontiguous");
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getListDirectivesAccess().getMultifileAction_0_2_0(),
							$current);
					}
				)
				(
					(
						lv_name_5_0='multifile'
						{
							newLeafNode(lv_name_5_0, grammarAccess.getListDirectivesAccess().getNameMultifileKeyword_0_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getListDirectivesRule());
							}
							setWithLastConsumed($current, "name", lv_name_5_0, "multifile");
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getListDirectivesAccess().getPublicAction_0_3_0(),
							$current);
					}
				)
				(
					(
						lv_name_7_0='public'
						{
							newLeafNode(lv_name_7_0, grammarAccess.getListDirectivesAccess().getNamePublicKeyword_0_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getListDirectivesRule());
							}
							setWithLastConsumed($current, "name", lv_name_7_0, "public");
						}
					)
				)
			)
			    |
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getListDirectivesAccess().getVolatileAction_0_4_0(),
							$current);
					}
				)
				(
					(
						lv_name_9_0='volatile'
						{
							newLeafNode(lv_name_9_0, grammarAccess.getListDirectivesAccess().getNameVolatileKeyword_0_4_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getListDirectivesRule());
							}
							setWithLastConsumed($current, "name", lv_name_9_0, "volatile");
						}
					)
				)
			)
		)
		otherlv_10='('
		{
			newLeafNode(otherlv_10, grammarAccess.getListDirectivesAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListDirectivesAccess().getPredicatesPredicateIndicatorParserRuleCall_2_0());
				}
				lv_predicates_11_0=rulePredicateIndicator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListDirectivesRule());
					}
					add(
						$current,
						"predicates",
						lv_predicates_11_0,
						"org.palladiosimulator.supporting.prolog.Prolog.PredicateIndicator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getListDirectivesAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getListDirectivesAccess().getPredicatesPredicateIndicatorParserRuleCall_3_1_0());
					}
					lv_predicates_13_0=rulePredicateIndicator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListDirectivesRule());
						}
						add(
							$current,
							"predicates",
							lv_predicates_13_0,
							"org.palladiosimulator.supporting.prolog.Prolog.PredicateIndicator");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_14=')'
		{
			newLeafNode(otherlv_14, grammarAccess.getListDirectivesAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRulePredicateIndicator
entryRulePredicateIndicator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredicateIndicatorRule()); }
	iv_rulePredicateIndicator=rulePredicateIndicator
	{ $current=$iv_rulePredicateIndicator.current; }
	EOF;

// Rule PredicateIndicator
rulePredicateIndicator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_name_0_1=RULE_PROLOG_ID
					{
						newLeafNode(lv_name_0_1, grammarAccess.getPredicateIndicatorAccess().getNamePROLOG_IDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPredicateIndicatorRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_0_1,
							"org.palladiosimulator.supporting.prolog.Prolog.PROLOG_ID");
					}
					    |
					lv_name_0_2=RULE_PROLOG_STRING
					{
						newLeafNode(lv_name_0_2, grammarAccess.getPredicateIndicatorAccess().getNamePROLOG_STRINGTerminalRuleCall_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPredicateIndicatorRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_0_2,
							"org.palladiosimulator.supporting.prolog.Prolog.PROLOG_STRING");
					}
				)
			)
		)
		otherlv_1='/'
		{
			newLeafNode(otherlv_1, grammarAccess.getPredicateIndicatorAccess().getSolidusKeyword_1());
		}
		(
			(
				lv_arity_2_0=RULE_INT
				{
					newLeafNode(lv_arity_2_0, grammarAccess.getPredicateIndicatorAccess().getArityINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredicateIndicatorRule());
					}
					setWithLastConsumed(
						$current,
						"arity",
						lv_arity_2_0,
						"org.palladiosimulator.supporting.prolog.Prolog.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleTermClause
entryRuleTermClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermClauseRule()); }
	iv_ruleTermClause=ruleTermClause
	{ $current=$iv_ruleTermClause.current; }
	EOF;

// Rule TermClause
ruleTermClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTermClauseAccess().getCompoundTermParserRuleCall_0());
		}
		this_CompoundTerm_0=ruleCompoundTerm
		{
			$current = $this_CompoundTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getTermClauseAccess().getFactHeadAction_1_0(),
						$current);
				}
			)
			    |
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getTermClauseAccess().getRuleHeadAction_1_1_0(),
							$current);
					}
				)
				otherlv_3=':-'
				{
					newLeafNode(otherlv_3, grammarAccess.getTermClauseAccess().getColonHyphenMinusKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTermClauseAccess().getBodyExpression_1100_xfyParserRuleCall_1_1_2_0());
						}
						lv_body_4_0=ruleExpression_1100_xfy
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTermClauseRule());
							}
							set(
								$current,
								"body",
								lv_body_4_0,
								"org.palladiosimulator.supporting.prolog.Prolog.Expression_1100_xfy");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTermAccess().getCompoundTermParserRuleCall_0());
		}
		this_CompoundTerm_0=ruleCompoundTerm
		{
			$current = $this_CompoundTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getAtomicNumberParserRuleCall_1());
		}
		this_AtomicNumber_1=ruleAtomicNumber
		{
			$current = $this_AtomicNumber_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getAtomicDoubleParserRuleCall_2());
		}
		this_AtomicDouble_2=ruleAtomicDouble
		{
			$current = $this_AtomicDouble_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getAtomicQuotedStringParserRuleCall_3());
		}
		this_AtomicQuotedString_3=ruleAtomicQuotedString
		{
			$current = $this_AtomicQuotedString_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getListParserRuleCall_4());
		}
		this_List_4=ruleList
		{
			$current = $this_List_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTermAccess().getControlPredicateParserRuleCall_5());
		}
		this_ControlPredicate_5=ruleControlPredicate
		{
			$current = $this_ControlPredicate_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCompoundTerm
entryRuleCompoundTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompoundTermRule()); }
	iv_ruleCompoundTerm=ruleCompoundTerm
	{ $current=$iv_ruleCompoundTerm.current; }
	EOF;

// Rule CompoundTerm
ruleCompoundTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_0=RULE_PROLOG_ID
				{
					newLeafNode(lv_value_0_0, grammarAccess.getCompoundTermAccess().getValuePROLOG_IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompoundTermRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_0_0,
						"org.palladiosimulator.supporting.prolog.Prolog.PROLOG_ID");
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getCompoundTermAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompoundTermAccess().getArgumentsExpression_900_fyParserRuleCall_1_1_0());
					}
					lv_arguments_2_0=ruleExpression_900_fy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompoundTermRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_2_0,
							"org.palladiosimulator.supporting.prolog.Prolog.Expression_900_fy");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getCompoundTermAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCompoundTermAccess().getArgumentsExpression_900_fyParserRuleCall_1_2_1_0());
						}
						lv_arguments_4_0=ruleExpression_900_fy
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompoundTermRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_4_0,
								"org.palladiosimulator.supporting.prolog.Prolog.Expression_900_fy");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getCompoundTermAccess().getRightParenthesisKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRuleAtomicNumber
entryRuleAtomicNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicNumberRule()); }
	iv_ruleAtomicNumber=ruleAtomicNumber
	{ $current=$iv_ruleAtomicNumber.current; }
	EOF;

// Rule AtomicNumber
ruleAtomicNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getAtomicNumberAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAtomicNumberRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.palladiosimulator.supporting.prolog.Prolog.INT");
			}
		)
	)
;

// Entry rule entryRuleAtomicDouble
entryRuleAtomicDouble returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicDoubleRule()); }
	iv_ruleAtomicDouble=ruleAtomicDouble
	{ $current=$iv_ruleAtomicDouble.current; }
	EOF;

// Rule AtomicDouble
ruleAtomicDouble returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getAtomicDoubleAccess().getValueDoubleParserRuleCall_0());
			}
			lv_value_0_0=ruleDouble
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getAtomicDoubleRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"org.palladiosimulator.supporting.prolog.Prolog.Double");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDouble
entryRuleDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDoubleRule()); }
	iv_ruleDouble=ruleDouble
	{ $current=$iv_ruleDouble.current.getText(); }
	EOF;

// Rule Double
ruleDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getDoubleAccess().getINTTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDoubleAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleAtomicQuotedString
entryRuleAtomicQuotedString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicQuotedStringRule()); }
	iv_ruleAtomicQuotedString=ruleAtomicQuotedString
	{ $current=$iv_ruleAtomicQuotedString.current; }
	EOF;

// Rule AtomicQuotedString
ruleAtomicQuotedString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_PROLOG_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getAtomicQuotedStringAccess().getValuePROLOG_STRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAtomicQuotedStringRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.palladiosimulator.supporting.prolog.Prolog.PROLOG_STRING");
			}
		)
	)
;

// Entry rule entryRuleList
entryRuleList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListRule()); }
	iv_ruleList=ruleList
	{ $current=$iv_ruleList.current; }
	EOF;

// Rule List
ruleList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getListAccess().getListAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getListAccess().getHeadsExpression_900_fyParserRuleCall_2_0_0());
					}
					lv_heads_2_0=ruleExpression_900_fy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListRule());
						}
						add(
							$current,
							"heads",
							lv_heads_2_0,
							"org.palladiosimulator.supporting.prolog.Prolog.Expression_900_fy");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getListAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getListAccess().getHeadsExpression_900_fyParserRuleCall_2_1_1_0());
						}
						lv_heads_4_0=ruleExpression_900_fy
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getListRule());
							}
							add(
								$current,
								"heads",
								lv_heads_4_0,
								"org.palladiosimulator.supporting.prolog.Prolog.Expression_900_fy");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			(
				otherlv_5='|'
				{
					newLeafNode(otherlv_5, grammarAccess.getListAccess().getVerticalLineKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getListAccess().getTailsExpression_900_fyParserRuleCall_2_2_1_0());
						}
						lv_tails_6_0=ruleExpression_900_fy
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getListRule());
							}
							add(
								$current,
								"tails",
								lv_tails_6_0,
								"org.palladiosimulator.supporting.prolog.Prolog.Expression_900_fy");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_7=','
					{
						newLeafNode(otherlv_7, grammarAccess.getListAccess().getCommaKeyword_2_2_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getListAccess().getTailsExpression_900_fyParserRuleCall_2_2_2_1_0());
							}
							lv_tails_8_0=ruleExpression_900_fy
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getListRule());
								}
								add(
									$current,
									"tails",
									lv_tails_8_0,
									"org.palladiosimulator.supporting.prolog.Prolog.Expression_900_fy");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
		)?
		otherlv_9=']'
		{
			newLeafNode(otherlv_9, grammarAccess.getListAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleControlPredicate
entryRuleControlPredicate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControlPredicateRule()); }
	iv_ruleControlPredicate=ruleControlPredicate
	{ $current=$iv_ruleControlPredicate.current; }
	EOF;

// Rule ControlPredicate
ruleControlPredicate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getControlPredicateAccess().getTrueParserRuleCall_0());
		}
		this_True_0=ruleTrue
		{
			$current = $this_True_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getControlPredicateAccess().getFalseParserRuleCall_1());
		}
		this_False_1=ruleFalse
		{
			$current = $this_False_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getControlPredicateAccess().getFailParserRuleCall_2());
		}
		this_Fail_2=ruleFail
		{
			$current = $this_Fail_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getControlPredicateAccess().getCutParserRuleCall_3());
		}
		this_Cut_3=ruleCut
		{
			$current = $this_Cut_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTrue
entryRuleTrue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrueRule()); }
	iv_ruleTrue=ruleTrue
	{ $current=$iv_ruleTrue.current; }
	EOF;

// Rule True
ruleTrue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTrueAccess().getTrueAction_0(),
					$current);
			}
		)
		otherlv_1='true'
		{
			newLeafNode(otherlv_1, grammarAccess.getTrueAccess().getTrueKeyword_1());
		}
	)
;

// Entry rule entryRuleFalse
entryRuleFalse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFalseRule()); }
	iv_ruleFalse=ruleFalse
	{ $current=$iv_ruleFalse.current; }
	EOF;

// Rule False
ruleFalse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFalseAccess().getFalseAction_0(),
					$current);
			}
		)
		otherlv_1='false'
		{
			newLeafNode(otherlv_1, grammarAccess.getFalseAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleFail
entryRuleFail returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFailRule()); }
	iv_ruleFail=ruleFail
	{ $current=$iv_ruleFail.current; }
	EOF;

// Rule Fail
ruleFail returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFailAccess().getFailAction_0(),
					$current);
			}
		)
		otherlv_1='fail'
		{
			newLeafNode(otherlv_1, grammarAccess.getFailAccess().getFailKeyword_1());
		}
	)
;

// Entry rule entryRuleCut
entryRuleCut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCutRule()); }
	iv_ruleCut=ruleCut
	{ $current=$iv_ruleCut.current; }
	EOF;

// Rule Cut
ruleCut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCutAccess().getCutAction_0(),
					$current);
			}
		)
		otherlv_1='!'
		{
			newLeafNode(otherlv_1, grammarAccess.getCutAccess().getExclamationMarkKeyword_1());
		}
	)
;

// Entry rule entryRuleExpression_1100_xfy
entryRuleExpression_1100_xfy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_1100_xfyRule()); }
	iv_ruleExpression_1100_xfy=ruleExpression_1100_xfy
	{ $current=$iv_ruleExpression_1100_xfy.current; }
	EOF;

// Rule Expression_1100_xfy
ruleExpression_1100_xfy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression_1100_xfyAccess().getExpression_1050_xfyParserRuleCall_0());
		}
		this_Expression_1050_xfy_0=ruleExpression_1050_xfy
		{
			$current = $this_Expression_1050_xfy_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpression_1100_xfyAccess().getLogicalOrLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getExpression_1100_xfyAccess().getSemicolonKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_1100_xfyAccess().getRightExpression_1050_xfyParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleExpression_1050_xfy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_1100_xfyRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.palladiosimulator.supporting.prolog.Prolog.Expression_1050_xfy");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression_1050_xfy
entryRuleExpression_1050_xfy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_1050_xfyRule()); }
	iv_ruleExpression_1050_xfy=ruleExpression_1050_xfy
	{ $current=$iv_ruleExpression_1050_xfy.current; }
	EOF;

// Rule Expression_1050_xfy
ruleExpression_1050_xfy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression_1050_xfyAccess().getExpression_1000_xfyParserRuleCall_0());
		}
		this_Expression_1000_xfy_0=ruleExpression_1000_xfy
		{
			$current = $this_Expression_1000_xfy_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_1050_xfyAccess().getConditionLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='->'
					{
						newLeafNode(otherlv_2, grammarAccess.getExpression_1050_xfyAccess().getHyphenMinusGreaterThanSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_1050_xfyAccess().getSoftCutLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='*->'
					{
						newLeafNode(otherlv_4, grammarAccess.getExpression_1050_xfyAccess().getAsteriskHyphenMinusGreaterThanSignKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_1050_xfyAccess().getRightExpression_1000_xfyParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleExpression_1000_xfy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_1050_xfyRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"org.palladiosimulator.supporting.prolog.Prolog.Expression_1000_xfy");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression_1000_xfy
entryRuleExpression_1000_xfy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_1000_xfyRule()); }
	iv_ruleExpression_1000_xfy=ruleExpression_1000_xfy
	{ $current=$iv_ruleExpression_1000_xfy.current; }
	EOF;

// Rule Expression_1000_xfy
ruleExpression_1000_xfy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression_1000_xfyAccess().getExpression_900_fyParserRuleCall_0());
		}
		this_Expression_900_fy_0=ruleExpression_900_fy
		{
			$current = $this_Expression_900_fy_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpression_1000_xfyAccess().getLogicalAndLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getExpression_1000_xfyAccess().getCommaKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_1000_xfyAccess().getRightExpression_900_fyParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleExpression_900_fy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_1000_xfyRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.palladiosimulator.supporting.prolog.Prolog.Expression_900_fy");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression_900_fy
entryRuleExpression_900_fy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_900_fyRule()); }
	iv_ruleExpression_900_fy=ruleExpression_900_fy
	{ $current=$iv_ruleExpression_900_fy.current; }
	EOF;

// Rule Expression_900_fy
ruleExpression_900_fy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression_900_fyAccess().getExpression_700_xfxParserRuleCall_0());
		}
		this_Expression_700_xfx_0=ruleExpression_700_xfx
		{
			$current = $this_Expression_700_xfx_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpression_900_fyAccess().getNotProvableAction_1_0(),
						$current);
				}
			)
			otherlv_2='\\+'
			{
				newLeafNode(otherlv_2, grammarAccess.getExpression_900_fyAccess().getReverseSolidusPlusSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_900_fyAccess().getExprExpression_900_fyParserRuleCall_1_2_0());
					}
					lv_expr_3_0=ruleExpression_900_fy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_900_fyRule());
						}
						set(
							$current,
							"expr",
							lv_expr_3_0,
							"org.palladiosimulator.supporting.prolog.Prolog.Expression_900_fy");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleExpression_700_xfx
entryRuleExpression_700_xfx returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_700_xfxRule()); }
	iv_ruleExpression_700_xfx=ruleExpression_700_xfx
	{ $current=$iv_ruleExpression_700_xfx.current; }
	EOF;

// Rule Expression_700_xfx
ruleExpression_700_xfx returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression_700_xfxAccess().getExpression_600_xfyParserRuleCall_0());
		}
		this_Expression_600_xfy_0=ruleExpression_600_xfy
		{
			$current = $this_Expression_600_xfy_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getLessThanLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='<'
					{
						newLeafNode(otherlv_2, grammarAccess.getExpression_700_xfxAccess().getLessThanSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getUnificationLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='='
					{
						newLeafNode(otherlv_4, grammarAccess.getExpression_700_xfxAccess().getEqualsSignKeyword_1_0_1_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getUnivLeftAction_1_0_2_0(),
								$current);
						}
					)
					otherlv_6='=..'
					{
						newLeafNode(otherlv_6, grammarAccess.getExpression_700_xfxAccess().getEqualsSignFullStopFullStopKeyword_1_0_2_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getStructuralEquivalenceLeftAction_1_0_3_0(),
								$current);
						}
					)
					otherlv_8='=@='
					{
						newLeafNode(otherlv_8, grammarAccess.getExpression_700_xfxAccess().getEqualsSignCommercialAtEqualsSignKeyword_1_0_3_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getStructuralEquivalenceNotProvableLeftAction_1_0_4_0(),
								$current);
						}
					)
					otherlv_10='\\=@='
					{
						newLeafNode(otherlv_10, grammarAccess.getExpression_700_xfxAccess().getReverseSolidusEqualsSignCommercialAtEqualsSignKeyword_1_0_4_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getNumberEqualLeftAction_1_0_5_0(),
								$current);
						}
					)
					otherlv_12='=:='
					{
						newLeafNode(otherlv_12, grammarAccess.getExpression_700_xfxAccess().getEqualsSignColonEqualsSignKeyword_1_0_5_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getLessOrEqualLeftAction_1_0_6_0(),
								$current);
						}
					)
					otherlv_14='=<'
					{
						newLeafNode(otherlv_14, grammarAccess.getExpression_700_xfxAccess().getEqualsSignLessThanSignKeyword_1_0_6_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getEquivalenceLeftAction_1_0_7_0(),
								$current);
						}
					)
					otherlv_16='=='
					{
						newLeafNode(otherlv_16, grammarAccess.getExpression_700_xfxAccess().getEqualsSignEqualsSignKeyword_1_0_7_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getNonEqualNumberLeftAction_1_0_8_0(),
								$current);
						}
					)
					otherlv_18='=\\='
					{
						newLeafNode(otherlv_18, grammarAccess.getExpression_700_xfxAccess().getEqualsSignReverseSolidusEqualsSignKeyword_1_0_8_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getGreaterThanLeftAction_1_0_9_0(),
								$current);
						}
					)
					otherlv_20='>'
					{
						newLeafNode(otherlv_20, grammarAccess.getExpression_700_xfxAccess().getGreaterThanSignKeyword_1_0_9_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getGreaterOrEqualLeftAction_1_0_10_0(),
								$current);
						}
					)
					otherlv_22='>='
					{
						newLeafNode(otherlv_22, grammarAccess.getExpression_700_xfxAccess().getGreaterThanSignEqualsSignKeyword_1_0_10_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getStandardOrderBeforeLeftAction_1_0_11_0(),
								$current);
						}
					)
					otherlv_24='@<'
					{
						newLeafNode(otherlv_24, grammarAccess.getExpression_700_xfxAccess().getCommercialAtLessThanSignKeyword_1_0_11_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getEqualOrStandardOrderBeforeLeftAction_1_0_12_0(),
								$current);
						}
					)
					otherlv_26='@=<'
					{
						newLeafNode(otherlv_26, grammarAccess.getExpression_700_xfxAccess().getCommercialAtEqualsSignLessThanSignKeyword_1_0_12_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getStandardOrderAfterLeftAction_1_0_13_0(),
								$current);
						}
					)
					otherlv_28='@>'
					{
						newLeafNode(otherlv_28, grammarAccess.getExpression_700_xfxAccess().getCommercialAtGreaterThanSignKeyword_1_0_13_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getEqualOrStandardOrderAfterLeftAction_1_0_14_0(),
								$current);
						}
					)
					otherlv_30='@>='
					{
						newLeafNode(otherlv_30, grammarAccess.getExpression_700_xfxAccess().getCommercialAtGreaterThanSignEqualsSignKeyword_1_0_14_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getNotUnifiableLeftAction_1_0_15_0(),
								$current);
						}
					)
					otherlv_32='\\='
					{
						newLeafNode(otherlv_32, grammarAccess.getExpression_700_xfxAccess().getReverseSolidusEqualsSignKeyword_1_0_15_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getDisequalityLeftAction_1_0_16_0(),
								$current);
						}
					)
					otherlv_34='\\=='
					{
						newLeafNode(otherlv_34, grammarAccess.getExpression_700_xfxAccess().getReverseSolidusEqualsSignEqualsSignKeyword_1_0_16_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getAsLeftAction_1_0_17_0(),
								$current);
						}
					)
					otherlv_36='as'
					{
						newLeafNode(otherlv_36, grammarAccess.getExpression_700_xfxAccess().getAsKeyword_1_0_17_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getIsLeftAction_1_0_18_0(),
								$current);
						}
					)
					otherlv_38='is'
					{
						newLeafNode(otherlv_38, grammarAccess.getExpression_700_xfxAccess().getIsKeyword_1_0_18_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getParticalUnificationLeftAction_1_0_19_0(),
								$current);
						}
					)
					otherlv_40='>:<'
					{
						newLeafNode(otherlv_40, grammarAccess.getExpression_700_xfxAccess().getGreaterThanSignColonLessThanSignKeyword_1_0_19_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_700_xfxAccess().getSubDictLeftAction_1_0_20_0(),
								$current);
						}
					)
					otherlv_42=':<'
					{
						newLeafNode(otherlv_42, grammarAccess.getExpression_700_xfxAccess().getColonLessThanSignKeyword_1_0_20_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_700_xfxAccess().getRightExpression_600_xfyParserRuleCall_1_1_0());
					}
					lv_right_43_0=ruleExpression_600_xfy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_700_xfxRule());
						}
						set(
							$current,
							"right",
							lv_right_43_0,
							"org.palladiosimulator.supporting.prolog.Prolog.Expression_600_xfy");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpression_600_xfy
entryRuleExpression_600_xfy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_600_xfyRule()); }
	iv_ruleExpression_600_xfy=ruleExpression_600_xfy
	{ $current=$iv_ruleExpression_600_xfy.current; }
	EOF;

// Rule Expression_600_xfy
ruleExpression_600_xfy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression_600_xfyAccess().getExpression_500_yfxParserRuleCall_0());
		}
		this_Expression_500_yfx_0=ruleExpression_500_yfx
		{
			$current = $this_Expression_500_yfx_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpression_600_xfyAccess().getModuleCallLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2=':'
			{
				newLeafNode(otherlv_2, grammarAccess.getExpression_600_xfyAccess().getColonKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_600_xfyAccess().getRightExpression_600_xfyParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleExpression_600_xfy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_600_xfyRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.palladiosimulator.supporting.prolog.Prolog.Expression_600_xfy");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpression_500_yfx
entryRuleExpression_500_yfx returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_500_yfxRule()); }
	iv_ruleExpression_500_yfx=ruleExpression_500_yfx
	{ $current=$iv_ruleExpression_500_yfx.current; }
	EOF;

// Rule Expression_500_yfx
ruleExpression_500_yfx returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression_500_yfxAccess().getExpression_400_yfxParserRuleCall_0());
		}
		this_Expression_400_yfx_0=ruleExpression_400_yfx
		{
			$current = $this_Expression_400_yfx_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_500_yfxAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='+'
					{
						newLeafNode(otherlv_2, grammarAccess.getExpression_500_yfxAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_500_yfxAccess().getMinusLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='-'
					{
						newLeafNode(otherlv_4, grammarAccess.getExpression_500_yfxAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_500_yfxAccess().getBinaryAndLeftAction_1_0_2_0(),
								$current);
						}
					)
					otherlv_6='/\\'
					{
						newLeafNode(otherlv_6, grammarAccess.getExpression_500_yfxAccess().getSolidusReverseSolidusKeyword_1_0_2_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_500_yfxAccess().getBinaryOrLeftAction_1_0_3_0(),
								$current);
						}
					)
					otherlv_8='\\/'
					{
						newLeafNode(otherlv_8, grammarAccess.getExpression_500_yfxAccess().getReverseSolidusSolidusKeyword_1_0_3_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_500_yfxAccess().getXorLeftAction_1_0_4_0(),
								$current);
						}
					)
					otherlv_10='xor'
					{
						newLeafNode(otherlv_10, grammarAccess.getExpression_500_yfxAccess().getXorKeyword_1_0_4_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_500_yfxAccess().getRightExpression_400_yfxParserRuleCall_1_1_0());
					}
					lv_right_11_0=ruleExpression_400_yfx
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_500_yfxRule());
						}
						set(
							$current,
							"right",
							lv_right_11_0,
							"org.palladiosimulator.supporting.prolog.Prolog.Expression_400_yfx");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression_400_yfx
entryRuleExpression_400_yfx returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_400_yfxRule()); }
	iv_ruleExpression_400_yfx=ruleExpression_400_yfx
	{ $current=$iv_ruleExpression_400_yfx.current; }
	EOF;

// Rule Expression_400_yfx
ruleExpression_400_yfx returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression_400_yfxAccess().getExpression_200_xfyParserRuleCall_0());
		}
		this_Expression_200_xfy_0=ruleExpression_200_xfy
		{
			$current = $this_Expression_200_xfy_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_400_yfxAccess().getMultiplicationLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='*'
					{
						newLeafNode(otherlv_2, grammarAccess.getExpression_400_yfxAccess().getAsteriskKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_400_yfxAccess().getDivisionLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='/'
					{
						newLeafNode(otherlv_4, grammarAccess.getExpression_400_yfxAccess().getSolidusKeyword_1_0_1_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_400_yfxAccess().getIntegerDivisionLeftAction_1_0_2_0(),
								$current);
						}
					)
					otherlv_6='//'
					{
						newLeafNode(otherlv_6, grammarAccess.getExpression_400_yfxAccess().getSolidusSolidusKeyword_1_0_2_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_400_yfxAccess().getDivLeftAction_1_0_3_0(),
								$current);
						}
					)
					otherlv_8='div'
					{
						newLeafNode(otherlv_8, grammarAccess.getExpression_400_yfxAccess().getDivKeyword_1_0_3_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_400_yfxAccess().getRdivLeftAction_1_0_4_0(),
								$current);
						}
					)
					otherlv_10='rdiv'
					{
						newLeafNode(otherlv_10, grammarAccess.getExpression_400_yfxAccess().getRdivKeyword_1_0_4_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_400_yfxAccess().getBitwiseShiftLeftLeftAction_1_0_5_0(),
								$current);
						}
					)
					otherlv_12='<<'
					{
						newLeafNode(otherlv_12, grammarAccess.getExpression_400_yfxAccess().getLessThanSignLessThanSignKeyword_1_0_5_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_400_yfxAccess().getModLeftAction_1_0_6_0(),
								$current);
						}
					)
					otherlv_14='mod'
					{
						newLeafNode(otherlv_14, grammarAccess.getExpression_400_yfxAccess().getModKeyword_1_0_6_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpression_400_yfxAccess().getRemLeftAction_1_0_7_0(),
								$current);
						}
					)
					otherlv_16='rem'
					{
						newLeafNode(otherlv_16, grammarAccess.getExpression_400_yfxAccess().getRemKeyword_1_0_7_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_400_yfxAccess().getRightExpression_200_xfyParserRuleCall_1_1_0());
					}
					lv_right_17_0=ruleExpression_200_xfy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_400_yfxRule());
						}
						set(
							$current,
							"right",
							lv_right_17_0,
							"org.palladiosimulator.supporting.prolog.Prolog.Expression_200_xfy");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpression_200_xfy
entryRuleExpression_200_xfy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_200_xfyRule()); }
	iv_ruleExpression_200_xfy=ruleExpression_200_xfy
	{ $current=$iv_ruleExpression_200_xfy.current; }
	EOF;

// Rule Expression_200_xfy
ruleExpression_200_xfy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression_200_xfyAccess().getExpression_200_fyParserRuleCall_0());
		}
		this_Expression_200_fy_0=ruleExpression_200_fy
		{
			$current = $this_Expression_200_fy_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getExpression_200_xfyAccess().getPowerLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='^'
			{
				newLeafNode(otherlv_2, grammarAccess.getExpression_200_xfyAccess().getCircumflexAccentKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_200_xfyAccess().getRightExpression_200_xfyParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleExpression_200_xfy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_200_xfyRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.palladiosimulator.supporting.prolog.Prolog.Expression_200_xfy");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpression_200_fy
entryRuleExpression_200_fy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_200_fyRule()); }
	iv_ruleExpression_200_fy=ruleExpression_200_fy
	{ $current=$iv_ruleExpression_200_fy.current; }
	EOF;

// Rule Expression_200_fy
ruleExpression_200_fy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpression_200_fyAccess().getExpression_PrimaryParserRuleCall_0());
		}
		this_Expression_Primary_0=ruleExpression_Primary
		{
			$current = $this_Expression_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				(
					(
						{
							$current = forceCreateModelElement(
								grammarAccess.getExpression_200_fyAccess().getPositiveNumberAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='+'
					{
						newLeafNode(otherlv_2, grammarAccess.getExpression_200_fyAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElement(
								grammarAccess.getExpression_200_fyAccess().getNegativeNumberAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='-'
					{
						newLeafNode(otherlv_4, grammarAccess.getExpression_200_fyAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElement(
								grammarAccess.getExpression_200_fyAccess().getBitwiseNegationAction_1_0_2_0(),
								$current);
						}
					)
					otherlv_6='\\'
					{
						newLeafNode(otherlv_6, grammarAccess.getExpression_200_fyAccess().getBackslashKeyword_1_0_2_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpression_200_fyAccess().getExprExpression_200_fyParserRuleCall_1_1_0());
					}
					lv_expr_7_0=ruleExpression_200_fy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpression_200_fyRule());
						}
						set(
							$current,
							"expr",
							lv_expr_7_0,
							"org.palladiosimulator.supporting.prolog.Prolog.Expression_200_fy");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleExpression_Primary
entryRuleExpression_Primary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpression_PrimaryRule()); }
	iv_ruleExpression_Primary=ruleExpression_Primary
	{ $current=$iv_ruleExpression_Primary.current; }
	EOF;

// Rule Expression_Primary
ruleExpression_Primary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getExpression_PrimaryAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getExpression_PrimaryAccess().getExpression_1100_xfyParserRuleCall_0_1());
			}
			this_Expression_1100_xfy_1=ruleExpression_1100_xfy
			{
				$current = $this_Expression_1100_xfy_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getExpression_PrimaryAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getExpression_PrimaryAccess().getTermParserRuleCall_1());
		}
		this_Term_3=ruleTerm
		{
			$current = $this_Term_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

RULE_PROBABILITY : ('1'|'0.' ('0'..'9')+);

RULE_PROLOG_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_PROLOG_STRING : '\'' ~('\'')* '\'';

RULE_PROLOG_SL_COMMENT : '%' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_INT : ('0'..'9')+;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
